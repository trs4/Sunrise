<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				xmlns:controls="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
        xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:sc="clr-namespace:Sunrise.Controls"
        xmlns:svm="clr-namespace:Sunrise.ViewModels"
        xmlns:sv="clr-namespace:Sunrise.Views"
        xmlns:sb="clr-namespace:Sunrise.Behaviors"
        xmlns:scv="clr-namespace:Sunrise.Converters"
        xmlns:su="clr-namespace:Sunrise.Utils"
				xmlns:res="clr-namespace:Sunrise.Model.Resources;assembly=Sunrise.Model"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Sunrise.Views.MainWindow"
		    x:DataType="svm:MainDesktopViewModel"
		    x:CompileBindings="False"
		    Height="600" MinHeight="300"
		    Width="1400" MinWidth="800"
        Icon="/Assets/avalonia-logo.ico"
        Title="Sunrise">
	<Design.DataContext>
		<svm:MainDesktopViewModel />
	</Design.DataContext>
	<Window.Styles>
		<Style Selector="TextBox">
			<Setter Property="FontSize" Value="14" />
		</Style>

		<Style Selector="DataGridColumnHeader">
			<Setter Property="MinHeight" Value="20" />
			<Setter Property="Padding" Value="5 0" />
		</Style>

		<Style Selector="DataGridRow">
			<Setter Property="Height" Value="20" />
		</Style>

		<Style Selector="DataGridCell">
			<Setter Property="Padding" Value="2 0" />
		</Style>

		<Style Selector="Grid.HeadGrid">
			<Setter Property="MinHeight" Value="20" />
			<Setter Property="Background" Value="White" />
		</Style>

		<Style Selector="TextBlock.HeadText">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Margin" Value="10 0 0 0" />
		</Style>

		<Style Selector="Button.AddBtn">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="Padding" Value="5 0" />
			<Setter Property="Margin" Value="5 0 0 0" />
			<Setter Property="MinWidth" Value="50" />
			<Setter Property="FontSize" Value="11" />
			<Setter Property="Theme" Value="{StaticResource MaterialFlatButton}" />
			<Setter Property="Content" Value="" />
			<Style Selector="^:pointerover">
				<Setter Property="Content" Value="{x:Static res:Texts.Add}" />
			</Style>
		</Style>
	</Window.Styles>

	<DockPanel>
		<sv:TrackPlayView DockPanel.Dock="Top" DataContext="{Binding TrackPlay}" />

		<ScrollViewer DockPanel.Dock="Left" MinWidth="170">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<Grid Grid.Row="0" x:Name="mediaGrid" Classes="HeadGrid">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="Auto" MinWidth="25" />
					</Grid.ColumnDefinitions>

					<TextBlock Grid.Column="0" Text="{x:Static res:Texts.Tracks}" Classes="HeadText" />

					<Button Grid.Column="1" Classes="AddBtn"
									Command="{Binding AddFolderCommand, Mode=OneWay}" />
				</Grid>

				<ListBox Grid.Row="1"
								 ItemsSource="{Binding Rubricks, Mode=OneWay}"
								 SelectedValue="{Binding SelectedRubrick}"
								 Tapped="Rubricks_Tapped">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" MinWidth="25" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>

								<Image Grid.Column="0" Source="{Binding Icon, Mode=OneWay}" MaxHeight="16" MaxWidth="16" />

								<TextBlock Grid.Column="1" Text="{Binding Name, Mode=OneWay}" />
							</Grid>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>

				<Grid Grid.Row="2" x:Name="playlistGrid" Classes="HeadGrid">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="Auto" MinWidth="25" />
					</Grid.ColumnDefinitions>

					<TextBlock Grid.Column="0" Text="{x:Static res:Texts.Playlists}" Classes="HeadText"
										 Tapped="Playlists_Tapped" />

					<Button Grid.Column="1" Classes="AddBtn"
									Command="{Binding AddPlaylistCommand, Mode=OneWay}" />
				</Grid>

				<ListBox Grid.Row="3"
								 ItemsSource="{Binding Playlists, Mode=OneWay}"
								 IsVisible="{Binding IsPlaylistsVisible}"
								 SelectionChanged="Playlist_SelectionChanged"
								 Tapped="Playlist_Tapped"
								 DoubleTapped="Playlist_DoubleTapped">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Grid>
								<TextBlock Text="{Binding Name}"
													 IsVisible="{Binding !Editing}" />
								<TextBox Text="{Binding Name}"
												 Height="14"
												 AcceptsReturn="True"
												 AcceptsTab="True"
												 IsVisible="{Binding Editing}"
												 KeyUp="Playlist_KeyUp"
												 LostFocus="Playlist_LostFocus" />
							</Grid>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<ListBox.ContextMenu>
						<ContextMenu>
							<MenuItem Header="{x:Static res:Texts.Delete}"
												Command="{Binding DeletePlaylistCommand, Mode=OneWay}" />
						</ContextMenu>
					</ListBox.ContextMenu>
				</ListBox>

				<Grid Grid.Row="4" x:Name="categoryGrid" Classes="HeadGrid">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="Auto" MinWidth="25" />
					</Grid.ColumnDefinitions>

					<TextBlock Grid.Column="0" Text="{x:Static res:Texts.Categories}" Classes="HeadText"
										 Tapped="Categories_Tapped" />

					<Button Grid.Column="1" Classes="AddBtn"
									Command="{Binding AddCategoryCommand, Mode=OneWay}" />
				</Grid>

				<ListBox Grid.Row="5"
								 ItemsSource="{Binding Categories, Mode=OneWay}"
								 IsVisible="{Binding IsCategoriesVisible}"
								 SelectionChanged="Category_SelectionChanged"
								 Tapped="Category_Tapped"
								 DoubleTapped="Category_DoubleTapped">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Grid>
								<TextBlock Text="{Binding Name}"
													 IsVisible="{Binding !Editing}" />
								<TextBox Text="{Binding Name}"
												 Height="14"
												 AcceptsReturn="True"
												 AcceptsTab="True"
												 IsVisible="{Binding Editing}"
												 KeyUp="Category_KeyUp"
												 LostFocus="Category_LostFocus" />
							</Grid>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<ListBox.ContextMenu>
						<ContextMenu>
							<MenuItem Header="{x:Static res:Texts.Delete}"
												Command="{Binding DeleteCategoryCommand, Mode=OneWay}" />
						</ContextMenu>
					</ListBox.ContextMenu>
				</ListBox>

			</Grid>
		</ScrollViewer>

		<ListBox DockPanel.Dock="Left" MinWidth="150"
						 ItemsSource="{Binding TrackSources, Mode=OneWay}"
						 SelectedItem="{Binding SelectedTrackSource}"
						 IsVisible="{Binding IsTrackSourcesVisible}"
						 SelectionChanged="TrackSource_SelectionChanged"
						 Tapped="TrackSource_Tapped"
						 DoubleTapped="TrackSource_DoubleTapped" />

		<DataGrid
			Name="tracksGrid"
			ItemsSource="{Binding Tracks, Mode=OneWay}"
			CanUserReorderColumns="True"
			CanUserResizeColumns="True"
			GridLinesVisibility="All"
			HorizontalScrollBarVisibility="Visible"
			VerticalScrollBarVisibility="Visible"
			BorderThickness="1" CornerRadius="0" BorderBrush="LightGray"
			Margin="1">
			<Interaction.Behaviors>
				<BehaviorCollection>
					<sb:ColumnsDataGridBehavior />
					<sb:RowDoubleClickDataGridBehavior DoubleClickCommand="{Binding DoubleClickCommand, Mode=OneTime}" />
				</BehaviorCollection>
			</Interaction.Behaviors>
		</DataGrid>
	</DockPanel>
</Window>
